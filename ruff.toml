# Same as Black
line-length = 90

# Always generate Python 3.11-compatible code
target-version = "py312"

# Files to lint
include = ["*.py"]

# Directories to ignore
exclude = ["flatpak"]

# Allow imports relative to the "src" directory
src = ["src"]

# Automatically fix basic problems
fix = true

[lint]
ignore-init-module-imports = true

select = [
    "E",
    "F",
    "B",
    "PL",
    "W",
    "I",
    "N",
    "UP",
    "N",
    "D",
    "C90",
    "A",
    "COM",
    "C4",
    "DTZ",
    "BLE",
    "ASYNC",
    "S",
    "FBT",
    "T10",
    "EM",
    "EXE",
    "ISC",
    "ICN",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SIM",
    "TID",
    "TCH",
    "INT",
    "ARG",
    "ERA",
    "PD",
    "PGH",
    "PLE",
    "PLR",
    "PLW",
    "TRY",
    "FLY",
    "NPY",
    "RUF",
]

ignore = [
    "PLE1205",
    "G004", # Logging statement uses f-string
    "W191", # Incompatibility with format.indent-style="tab"
    "D206", # Incompatibility with format.indent-style="tab"
    "COM812", # Trailing comma
    "D417", # description in docstrings
    "E402", # Allow module-level imports to not necessarily be at top of file
    "E101", # Allow mixed indentation
    "FBT001", # Allow boolean-typed positional argument in function definition
    "FBT002", # Allow boolean default positional argument in function definition
    "FBT003", # Allow boolean positional value in function call
    "PLR0913" # Allow more than 5 function arguments
]

[lint.per-file-ignores]
"__init__.py" = ["F403", "D104"]

[lint.pydocstyle]
convention = "google"

[lint.isort]
case-sensitive = true

[format]
indent-style = "tab"
